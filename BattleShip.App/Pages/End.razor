@page "/end"
@using BattleShip.Models
@using BattleShip.App.Service

@inject HttpClient Http
@inject NavigationManager Navigation
@inject GameState GameState

<h3>FIN DE PARTIE</h3>

@if (GameState.WinnerName != null)
{
    <p>Le gagnant est : <strong> @GameState.WinnerName</strong></p>
}
else
{
    <p>Le jeu est terminé, mais aucun gagnant n'a été déterminé.</p>
}

<button @onclick="StartNewGameIA">Nouvelle partie IA</button>
<button @onclick="StartNewGamePlayer">Nouvelle partie avec un autre joueur</button>

@if (!string.IsNullOrEmpty(DebugMessage))
{
    <div>@DebugMessage</div>
}

@code {
    private string DebugMessage { get; set; }
    private async Task StartNewGameIA()
    {

        var response = await Http.PostAsJsonAsync("/newGame", new { });
        if (response.IsSuccessStatusCode)
        {
            var gameData = await response.Content.ReadFromJsonAsync<NewGameResponse>();

            GameState.GameId = gameData.GameId;


            char[,] playerGrid = GameState.ConvertListToCharArray(gameData.PlayerGrid);
            bool?[,] opponentGrid = GameState.ConvertListToBoolArray(gameData.OpponentGrid);
            GameState.InitializePlayerGrid(playerGrid);
            GameState.InitializeOpponentGrid(opponentGrid);
            GameState.IsPlayerTurn = true;
            Navigation.NavigateTo("/gameIA");

        }
        else
        {
            DebugMessage = "Erreur lors du démarrage de la nouvelle partie.";
            Console.Error.WriteLine(DebugMessage);
        }

    }

    private async Task StartNewGamePlayer()
    {
        DebugMessage = "Fonctionnalité StartNewGamePlayer non encore implémentée.";
        Console.WriteLine(DebugMessage);

        DebugMessage += "\nSortie de StartNewGamePlayer.";
        Console.WriteLine(DebugMessage);
    }

    public class NewGameResponse
    {
        public string GameId { get; set; }
        public string Player { get; set; }
        public string Opponent { get; set; }
        public List<List<char>> PlayerGrid { get; set; }
        public List<List<bool?>> OpponentGrid { get; set; }
    }
}
